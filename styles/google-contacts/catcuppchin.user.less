/* ==UserStyle==
@name Google Contacts Catppuccin
@namespace github.com/catppuccin/userstyles/styles/google-contacts
@homepageURL https://github.com/catppuccin/userstyles/tree/main/styles/google-contacts
@version 2025.03.10
@updateURL https://github.com/catppuccin/userstyles/raw/main/styles/google-contacts/catppuccin.user.less
@supportURL https://github.com/catppuccin/userstyles/issues?q=is%3Aopen+is%3Aissue+label%3Agoogle-contacts
@description Soothing pastel theme for Google Contacts
@author Catppuccin
@license MIT

@preprocessor less
@var select lightFlavor "Light Flavor" ["latte:Latte*", "frappe:Frappé", "macchiato:Macchiato", "mocha:Mocha"]
@var select darkFlavor "Dark Flavor" ["latte:Latte", "frappe:Frappé", "macchiato:Macchiato", "mocha:Mocha*"]
@var select accentColor "Accent" ["rosewater:Rosewater", "flamingo:Flamingo", "pink:Pink", "mauve:Mauve*", "red:Red", "maroon:Maroon", "peach:Peach", "yellow:Yellow", "green:Green", "teal:Teal", "blue:Blue", "sapphire:Sapphire", "sky:Sky", "lavender:Lavender", "subtext0:Gray"]
==/UserStyle== */

@-moz-document domain("contacts.google.com") {
  :root {
    @media (prefers-color-scheme: light) {
      #catppuccin(@lightFlavor);
    }
    @media (prefers-color-scheme: dark) {
      #catppuccin(@darkFlavor);
    }
  }

  #rgbify(@color) {
    @rgb: red(@color), green(@color), blue(@color);
  }

  #catppuccin(@flavor) {
    @rosewater: @catppuccin[@@flavor][@rosewater];
    @flamingo: @catppuccin[@@flavor][@flamingo];
    @pink: @catppuccin[@@flavor][@pink];
    @mauve: @catppuccin[@@flavor][@mauve];
    @red: @catppuccin[@@flavor][@red];
    @maroon: @catppuccin[@@flavor][@maroon];
    @peach: @catppuccin[@@flavor][@peach];
    @yellow: @catppuccin[@@flavor][@yellow];
    @green: @catppuccin[@@flavor][@green];
    @teal: @catppuccin[@@flavor][@teal];
    @sky: @catppuccin[@@flavor][@sky];
    @sapphire: @catppuccin[@@flavor][@sapphire];
    @blue: @catppuccin[@@flavor][@blue];
    @lavender: @catppuccin[@@flavor][@lavender];
    @text: @catppuccin[@@flavor][@text];
    @subtext1: @catppuccin[@@flavor][@subtext1];
    @subtext0: @catppuccin[@@flavor][@subtext0];
    @overlay2: @catppuccin[@@flavor][@overlay2];
    @overlay1: @catppuccin[@@flavor][@overlay1];
    @overlay0: @catppuccin[@@flavor][@overlay0];
    @surface2: @catppuccin[@@flavor][@surface2];
    @surface1: @catppuccin[@@flavor][@surface1];
    @surface0: @catppuccin[@@flavor][@surface0];
    @base: @catppuccin[@@flavor][@base];
    @mantle: @catppuccin[@@flavor][@mantle];
    @crust: @catppuccin[@@flavor][@crust];
    @accent: @catppuccin[@@flavor][@@accentColor];

    color-scheme: if(@flavor = latte, light, dark);

    ::selection {
      background-color: fade(@accent, 30%);
    }

    input,
    textarea {
      &::placeholder {
        color: @subtext0 !important;
      }
    }

	@color-error                     : @red;
	@color-on-error                  : darken(desaturate(@red, 20%), 50%);
	@color-error-container           : desaturate(darken(@red, 50%), 50%);
	@color-on-error-container        : desaturate(darken(@red, 50%), 50%);

	@color-background                : @base;
	@color-on-background             : @text;

	@color-primary                   : @accent;
	@color-on-primary                : darken(desaturate(@color-primary, 25%), 50%);
	@color-primary-container         : saturate(mix(@color-primary, @mantle, 20%), 20%);
	@color-on-primary-container      : lighten(@color-primary-container, 50);
	@color-inverse-primary           : lighten(@accent, 50%); // Handled in flavour specific code
	
	@color-secondary                 : lighten(desaturate(@accent, 40%),0%);
	@color-on-secondary              : darken(@color-secondary, 50%);
	@color-secondary-container       : saturate(mix(@color-secondary, @mantle, 20%), 0%);
  @color-on-secondary-container    : lighten(saturate(@color-secondary-container, 50%), 65%);

	@color-surface                   : @base;
	@color-on-surface                : @text;
	@color-surface-variant           : mix(@mantle, @accent, 87.5%);
	@color-on-surface-variant        : @subtext0;
	@color-surface-tint              : @accent;

	@color-inverse-on-surface        : @crust;
	@color-inverse-surface           : @text;
	
	@color-surface-container-lowest  : @crust;
	@color-surface-container-low     : @crust;
	@color-surface-container         : @surface0;
	@color-surface-container-high    : @surface0;
	@color-surface-container-highest : @surface1;
	
	@color-tertiary                  : @accent;
	@color-on-tertiary               : darken(desaturate(@color-tertiary, 25%), 50%);
	@color-tertiary-container        : #fff;
	
	@color-outline                   : @overlay2;
	@color-outline-variant           : @overlay0;
	
	@color-scrim                     : #000;
	@color-shadow                    : #000;
	
	@color-caution                   : @yellow;
	@color-on-caution                : darken(@color-caution, 50);
	@color-caution-container         : saturate(mix(@color-caution, @mantle, 40%), 30%);
	@color-on-caution-container      : desaturate(darken(@accent, 50%), 50%);
	
  @light-image-filter              : invert(1) hue-rotate(180deg);

  // review: This "when" statement doesn't seem to be applying correctly
  // causing contrast issues on certain elements
  & when (@flavor = latte) {
    @color-on-error                  : lighten(desaturate(@red, 20%), 50%);
    @color-on-primary                : lighten(desaturate(@color-primary, 25%), 50%);
    @color-on-secondary              : lighten(@color-secondary, 50%);
    @color-on-tertiary               : lighten(desaturate(@color-tertiary, 25%), 50%);
    @color-on-caution                : lighten(@color-caution, 50%);
    @color-on-caution-container      : lighten(desaturate(@accent, 50%), 30%);
    @color-on-primary-container      : darken(desaturate(@color-primary-container, 20%), 50%);
    @color-on-secondary-container    : darken(desaturate(@color-secondary-container, 20%), 50%);
  
    @light-image-filter: brightness(0.9);
  }

	body {
		--gm3-sys-color-error                    : @color-error                    ;
		--gm3-sys-color-on-error                 : @color-on-error                 ;
		--gm3-sys-color-background               : @color-background               ;
		--gm3-sys-color-on-background            : @color-on-background            ;
		--gm3-sys-color-primary                  : @color-primary                  ;
		--gm3-sys-color-on-primary               : @color-on-primary               ;
		--gm3-sys-color-inverse-primary          : @color-inverse-primary          ;
		--gm3-sys-color-secondary                : @color-secondary                ;
		--gm3-sys-color-on-secondary             : @color-on-secondary             ;
		--gm3-sys-color-surface                  : @color-surface                  ;
		--gm3-sys-color-on-surface               : @color-on-surface               ;
		--gm3-sys-color-on-surface-variant       : @color-on-surface-variant       ;
		--gm3-sys-color-inverse-on-surface       : @color-inverse-on-surface       ;
		--gm3-sys-color-inverse-surface          : @color-inverse-surface          ;
		--gm3-sys-color-shadow                   : @color-shadow                   ;
		--gm3-sys-color-primary-container        : @color-primary-container        ;
		--gm3-sys-color-on-primary-container     : @color-on-primary-container     ;
		--gm3-sys-color-secondary-container      : @color-secondary-container      ;
		--gm3-sys-color-on-secondary-container   : @color-on-secondary-container   ;
		--gm3-sys-color-error-container          : @color-error-container          ;
		--gm3-sys-color-on-error-container       : @color-on-error-container       ;
		--gm3-sys-color-surface-variant          : @color-surface-variant          ;
		--gm3-sys-color-surface-tint             : @color-surface-tint             ;
		--gm3-sys-color-surface-container-lowest : @color-surface-container-lowest ;
		--gm3-sys-color-surface-container-low    : @color-surface-container-low    ;
		--gm3-sys-color-surface-container        : @color-surface-container        ;
		--gm3-sys-color-surface-container-high   : @color-surface-container-high   ;
		--gm3-sys-color-surface-container-highest: @color-surface-container-highest;
		--gm3-sys-color-tertiary                 : @color-tertiary                 ;
		--gm3-sys-color-on-tertiary              : @color-on-tertiary              ;
		--gm3-sys-color-tertiary-container       : @color-tertiary-container       ;
		--gm3-sys-color-outline                  : @color-outline                  ;
		--gm3-sys-color-outline-variant          : @color-outline-variant          ;
		--gm3-sys-color-scrim                    : @color-scrim                    ;
		--gm3-sys-color-caution                  : @color-caution                  ;
		--gm3-sys-color-on-caution               : @color-on-caution               ;
		--gm3-sys-color-caution-container        : @color-caution-container        ;
		--gm3-sys-color-on-caution-container     : @color-on-caution-container     ;
	
		// LEGACY
		--gm3-sys-color-surface-dim              : @color-surface-container-high   ;

		// RGB Generation
		--gm3-sys-color-error-rgb                    : #rgbify(@color-error                    ) [];
		--gm3-sys-color-on-error-rgb                 : #rgbify(@color-on-error                 ) [];
		--gm3-sys-color-background-rgb               : #rgbify(@color-background               ) [];
		--gm3-sys-color-on-background-rgb            : #rgbify(@color-on-background            ) [];
		--gm3-sys-color-primary-rgb                  : #rgbify(@color-primary                  ) [];
		--gm3-sys-color-on-primary-rgb               : #rgbify(@color-on-primary               ) [];
		--gm3-sys-color-inverse-primary-rgb          : #rgbify(@color-inverse-primary          ) [];
		--gm3-sys-color-secondary-rgb                : #rgbify(@color-secondary                ) [];
		--gm3-sys-color-on-secondary-rgb             : #rgbify(@color-on-secondary             ) [];
		--gm3-sys-color-surface-rgb                  : #rgbify(@color-surface                  ) [];
		--gm3-sys-color-on-surface-rgb               : #rgbify(@color-on-surface               ) [];
		--gm3-sys-color-on-surface-variant-rgb       : #rgbify(@color-on-surface-variant       ) [];
		--gm3-sys-color-inverse-on-surface-rgb       : #rgbify(@color-inverse-on-surface       ) [];
		--gm3-sys-color-inverse-surface-rgb          : #rgbify(@color-inverse-surface          ) [];
		--gm3-sys-color-shadow-rgb                   : #rgbify(@color-shadow                   ) [];
		--gm3-sys-color-primary-container-rgb        : #rgbify(@color-primary-container        ) [];
		--gm3-sys-color-on-primary-container-rgb     : #rgbify(@color-on-primary-container     ) [];
		--gm3-sys-color-secondary-container-rgb      : #rgbify(@color-secondary-container      ) [];
		--gm3-sys-color-on-secondary-container-rgb   : #rgbify(@color-on-secondary-container   ) [];
		--gm3-sys-color-error-container-rgb          : #rgbify(@color-error-container          ) [];
		--gm3-sys-color-on-error-container-rgb       : #rgbify(@color-on-error-container       ) [];
		--gm3-sys-color-surface-variant-rgb          : #rgbify(@color-surface-variant          ) [];
		--gm3-sys-color-surface-tint-rgb             : #rgbify(@color-surface-tint             ) [];
		--gm3-sys-color-surface-container-lowest-rgb : #rgbify(@color-surface-container-lowest ) [];
		--gm3-sys-color-surface-container-low-rgb    : #rgbify(@color-surface-container-low    ) [];
		--gm3-sys-color-surface-container-rgb        : #rgbify(@color-surface-container        ) [];
		--gm3-sys-color-surface-container-high-rgb   : #rgbify(@color-surface-container-high   ) [];
		--gm3-sys-color-surface-container-highest-rgb: #rgbify(@color-surface-container-highest) [];
		--gm3-sys-color-tertiary-rgb                 : #rgbify(@color-tertiary                 ) [];
		--gm3-sys-color-on-tertiary-rgb              : #rgbify(@color-on-tertiary              ) [];
		--gm3-sys-color-tertiary-container-rgb       : #rgbify(@color-tertiary-container       ) [];
		--gm3-sys-color-outline-rgb                  : #rgbify(@color-outline                  ) [];
		--gm3-sys-color-outline-variant-rgb          : #rgbify(@color-outline-variant          ) [];
		--gm3-sys-color-scrim-rgb                    : #rgbify(@color-scrim                    ) [];
		--gm3-sys-color-caution-rgb                  : #rgbify(@color-caution                  ) [];
		--gm3-sys-color-on-caution-rgb               : #rgbify(@color-on-caution               ) [];
		--gm3-sys-color-caution-container-rgb        : #rgbify(@color-caution-container        ) [];
		--gm3-sys-color-on-caution-container-rgb     : #rgbify(@color-on-caution-container     ) [];
	
		// LEGACY
		--gm3-sys-color-surface-dim-rgb              : #rgbify(@color-surface-container-high   ) [];
	}

  .O68mGe-xl07Ob {
    --gm3-list-list-item-disabled-leading-icon-color: initial;
    --gm3-list-list-item-hover-leading-icon-icon-color: initial;
    --gm3-list-list-item-selected-trailing-icon-color: initial;
    --gm3-list-list-item-leading-icon-color: initial;
    --gm3-list-list-item-trailing-icon-color: initial;
    --gm3-list-list-item-selected-label-text-color: initial;
    --gm3-list-list-item-supporting-text-color: initial;
    --gm3-list-list-item-trailing-supporting-text-color: initial;
    --gm3-list-list-item-disabled-label-text-color: initial;
    --gm3-list-list-item-disabled-supporting-text-color: initial;
    --gm3-list-list-item-disabled-trailing-supporting-text-color: initial;
    --gm3-list-list-item-focus-label-text-color: initial;
    --gm3-list-list-item-hover-label-text-color: initial;
    --gm3-list-list-item-label-text-color: initial;;
  }

	header.gb_Fa {
		background-color: var(--gm3-sys-color-surface-container-low) !important;
		color: var(--gm3-sys-color-on-surface);
	}

	.jkrPQc {
		background-color: var(--gm3-sys-color-surface);
	}

	.gb_id, .JPdR6b, .zadfYd .j3urvf, .VOEIyf .jBmls {
		background-color: var(--gm3-sys-color-surface-container)
	}
	
	.z80M1.FwR7Pcm, .z80M1.FwR7Pc, .z80M1 .oKubKe[aria-selected=true] {
		background-color: var(--gm3-sys-color-surface-container-highest) !important;
	}

	.z80M1.N2RpBe::before, .RiYDI {
		border-color: var(--gm3-sys-color-primary);
	}

	.RiYDI {
		border-top-color: transparent;
	}
	
	.z80M1.qs41qe>.aBBjbd {
		background-image: radial-gradient(closest-side, var(--gm3-ripple-pressed-color, rgba(var(--gm3-sys-color-on-surface-rgb,currentColor),0.12)) max(100% - 70px, 65%), transparent 100%);
	}

	.gb_Fa svg,
	.gb_Pc svg,
	.gb_2c .gb_td,
	.ZKP9Md,
	.JPdR6b,
	.z80M1,
	.lueeKe.lueeKe,
	.gb_Bc div:first-child,
	.gb_Bc > *,
	.rnU4Pb {
		color: inherit;
	}

	.KI6D8e,
	.gb_Fa svg,
	.gb_Pc svg,.gb_sd .gb_td, .tB5Jxf-xl07Ob-XxIAqe, .VOEIyf, .VOEIyf .jBmls, .oKubKe, .gb_id.gb_jd .gb_qe, .gb_Fa {
		color: var(--gm3-sys-color-on-surface)
	}
	
	.gb_id button svg, .gb_id button img {
		fill: var(--gm3-sys-color-on-surface);
	}

	.bziVTe {
		--gm3-icon-button-standard-unselected-icon-color: var(--md-sys-color-on-surface);
		--gm3-icon-button-standard-unselected-hover-icon-color: var(--md-sys-color-on-surface);
		--gm3-icon-button-standard-unselected-focus-icon-color: var(--md-sys-color-on-surface);
		--gm3-icon-button-standard-unselected-pressed-icon-color: var(--md-sys-color-on-surface);
	}

	.JvO9cb, .H1IxX, .gb_Wa {
		background: transparent;
	}

    .zucFAc,
    .sSe4od > img,
    .aQUH8d,
	// Custom screenshots can be taken later
    // from "How to label contacts" dialogue
    .EK7xae,
    .uC1I7b,
    .Vu9Cp {
      filter: @light-image-filter;
    }

	.BPX1ed.eLNT1d {
		background-color: var(--gm3-sys-color-caution-container);
	}

	a {
		color: var(--gm3-sys-color-primary)
	}

	.BPX1ed.QIMKlc {
		color: var(--gm3-sys-color-on-primary)
	}
	
	.VUoKZ>.TRHLAc {
		background-color: var(--gm3-sys-color-primary);
	}

	.mf6tRb, .waKsec {
		color: var(--gm3-sys-color-on-surface-variant)
	}

	.gb_Wa, .Be1lEd {
		border-color: var(--gm3-sys-color-outline-variant);
	}
	
	.gb_Wa:hover {
		border-color: var(--gm3-sys-color-outline);
	}

	.gb_Ac, .RM9ulf, .R8qYlc {
		background-color: var(--gm3-sys-color-inverse-surface);
		color: var(--gm3-tooltip-plain-supporting-text-color, var(--gm3-sys-color-inverse-on-surface, #f2f2f2));
	}
  }
}

/* deno-fmt-ignore */
@catppuccin: {
  @latte:     { @rosewater: #dc8a78; @flamingo: #dd7878; @pink: #ea76cb; @mauve: #8839ef; @red: #d20f39; @maroon: #e64553; @peach: #fe640b; @yellow: #df8e1d; @green: #40a02b; @teal: #179299; @sky: #04a5e5; @sapphire: #209fb5; @blue: #1e66f5; @lavender: #7287fd; @text: #4c4f69; @subtext1: #5c5f77; @subtext0: #6c6f85; @overlay2: #7c7f93; @overlay1: #8c8fa1; @overlay0: #9ca0b0; @surface2: #acb0be; @surface1: #bcc0cc; @surface0: #ccd0da; @base: #eff1f5; @mantle: #e6e9ef; @crust: #dce0e8; };
  @frappe:    { @rosewater: #f2d5cf; @flamingo: #eebebe; @pink: #f4b8e4; @mauve: #ca9ee6; @red: #e78284; @maroon: #ea999c; @peach: #ef9f76; @yellow: #e5c890; @green: #a6d189; @teal: #81c8be; @sky: #99d1db; @sapphire: #85c1dc; @blue: #8caaee; @lavender: #babbf1; @text: #c6d0f5; @subtext1: #b5bfe2; @subtext0: #a5adce; @overlay2: #949cbb; @overlay1: #838ba7; @overlay0: #737994; @surface2: #626880; @surface1: #51576d; @surface0: #414559; @base: #303446; @mantle: #292c3c; @crust: #232634; };
  @macchiato: { @rosewater: #f4dbd6; @flamingo: #f0c6c6; @pink: #f5bde6; @mauve: #c6a0f6; @red: #ed8796; @maroon: #ee99a0; @peach: #f5a97f; @yellow: #eed49f; @green: #a6da95; @teal: #8bd5ca; @sky: #91d7e3; @sapphire: #7dc4e4; @blue: #8aadf4; @lavender: #b7bdf8; @text: #cad3f5; @subtext1: #b8c0e0; @subtext0: #a5adcb; @overlay2: #939ab7; @overlay1: #8087a2; @overlay0: #6e738d; @surface2: #5b6078; @surface1: #494d64; @surface0: #363a4f; @base: #24273a; @mantle: #1e2030; @crust: #181926; };
  @mocha:     { @rosewater: #f5e0dc; @flamingo: #f2cdcd; @pink: #f5c2e7; @mauve: #cba6f7; @red: #f38ba8; @maroon: #eba0ac; @peach: #fab387; @yellow: #f9e2af; @green: #a6e3a1; @teal: #94e2d5; @sky: #89dceb; @sapphire: #74c7ec; @blue: #89b4fa; @lavender: #b4befe; @text: #cdd6f4; @subtext1: #bac2de; @subtext0: #a6adc8; @overlay2: #9399b2; @overlay1: #7f849c; @overlay0: #6c7086; @surface2: #585b70; @surface1: #45475a; @surface0: #313244; @base: #1e1e2e; @mantle: #181825; @crust: #11111b; };
};